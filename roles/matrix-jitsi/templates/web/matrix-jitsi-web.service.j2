#jinja2: lstrip_blocks: "True"
[Unit]
Description=Matrix jitsi-web server
{% for service in matrix_jitsi_web_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}
DefaultDependencies=no

[Service]
Type=simple
Environment="HOME={{ matrix_systemd_unit_home_path }}"
ExecStartPre=-{{ matrix_host_command_sh }} -c '{{ matrix_host_command_docker }} kill matrix-jitsi-web 2>/dev/null'
ExecStartPre=-{{ matrix_host_command_sh }} -c '{{ matrix_host_command_docker }} rm matrix-jitsi-web 2>/dev/null'

ExecStart={{ matrix_host_command_docker }} run --rm --name matrix-jitsi-web \
			--log-driver=none \
			--network={{ matrix_docker_network }} \
			--network-alias={{ matrix_jitsi_xmpp_domain }} \
			--env-file={{ matrix_jitsi_web_base_path }}/env \
			{% if matrix_jitsi_web_container_http_host_bind_port %}
			-p {{ matrix_jitsi_web_container_http_host_bind_port }}:80 \
			{% endif %}
			--mount type=bind,src={{ matrix_jitsi_web_config_path }},dst=/config \
			--mount type=bind,src={{ matrix_jitsi_web_transcripts_path }},dst=/usr/share/jitsi-meet/transcripts \
			--mount type=bind,src={{ matrix_jitsi_web_crontabs_path }},dst=/var/spool/cron/crontabs \
			{% for arg in matrix_jitsi_web_container_extra_arguments %}
			{{ arg }} \
			{% endfor %}
			{{ matrix_jitsi_web_docker_image }}

ExecStop=-{{ matrix_host_command_sh }} -c '{{ matrix_host_command_docker }} kill matrix-jitsi-web 2>/dev/null'
ExecStop=-{{ matrix_host_command_sh }} -c '{{ matrix_host_command_docker }} rm matrix-jitsi-web 2>/dev/null'
Restart=always
RestartSec=30
SyslogIdentifier=matrix-jitsi-web

[Install]
WantedBy=multi-user.target
