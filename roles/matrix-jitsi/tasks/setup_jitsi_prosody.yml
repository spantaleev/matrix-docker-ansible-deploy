---

#
# Tasks related to setting up jitsi-prosody
#

- name: Ensure Matrix jitsi-prosody environment exists
  file:
    path: "{{ item.path }}"
    state: directory
    mode: 0777
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
  with_items:
    - { path: "{{ matrix_jitsi_prosody_base_path }}", when: true }
    - { path: "{{ matrix_jitsi_prosody_config_path }}", when: true }
    - { path: "{{ matrix_jitsi_prosody_plugins_path }}", when: true }
  when: matrix_jitsi_enabled|bool and item.when

- name: Ensure jitsi-prosody Docker image is pulled
  docker_image:
    name: "{{ matrix_jitsi_prosody_docker_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ matrix_jitsi_prosody_docker_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_jitsi_prosody_docker_image_force_pull }}"
  when: matrix_jitsi_enabled|bool

- name: Ensure jitsi-prosody environment variables file is created
  template:
    src: "{{ role_path }}/templates/prosody/env.j2"
    dest: "{{ matrix_jitsi_prosody_base_path }}/env"
    mode: 0640
  when: matrix_jitsi_enabled|bool

- name: Ensure matrix-jitsi-prosody.service file is installed
  template:
    src: "{{ role_path }}/templates/prosody/matrix-jitsi-prosody.service.j2"
    dest: "{{ matrix_systemd_path }}/matrix-jitsi-prosody.service"
    mode: 0644
  register: matrix_jitsi_prosody_systemd_service_result
  when: matrix_jitsi_enabled|bool

- name: Ensure systemd service is reloaded after matrix-jitsi-prosody.service installation
  service:
    daemon_reload: yes
  when: "matrix_jitsi_enabled and matrix_jitsi_prosody_systemd_service_result.changed"

- name: Ensure authentication is properly configured
  include_tasks:
    file: "{{ role_path }}/tasks/util/setup_jitsi_auth.yml"
  when:
    - matrix_jitsi_enabled|bool
    - matrix_jitsi_enable_auth|bool


#
# Tasks related to getting rid of jitsi-prosody (if it was previously enabled)
#

- name: Ensure matrix-jitsi-prosody.service file exists
  stat:
    path: "{{ matrix_systemd_path }}/matrix-jitsi-prosody.service"
  register: matrix_jitsi_prosody_service_stat
  when: "not matrix_jitsi_enabled|bool"

- name: Ensure matrix-jitsi-prosody is stopped
  service:
    name: matrix-jitsi-prosody
    state: stopped
    enabled: no
    daemon_reload: yes
  register: stopping_result
  when: "not matrix_jitsi_enabled|bool and matrix_jitsi_prosody_service_stat.stat.exists"

- name: Ensure matrix-jitsi-prosody.service file doesn't exist
  file:
    path: "{{ matrix_systemd_path }}/matrix-jitsi-prosody.service"
    state: absent
  when: "not matrix_jitsi_enabled|bool and matrix_jitsi_prosody_service_stat.stat.exists"

- name: Ensure systemd is reloaded after matrix-jitsi-prosody.service removal
  service:
    daemon_reload: yes
  when: "not matrix_jitsi_enabled|bool and matrix_jitsi_prosody_service_stat.stat.exists"

- name: Ensure Matrix jitsi-prosody paths doesn't exist
  file:
    path: "{{ matrix_jitsi_prosody_base_path }}"
    state: absent
  when: "not matrix_jitsi_enabled|bool"

# Intentionally not removing the Docker image when uninstalling.
# We can't be sure it had been pulled by us in the first place.
