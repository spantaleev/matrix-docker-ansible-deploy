- name: Ensure Goofys Docker image is pulled
  docker_image:
    name: "{{ matrix_s3_goofys_docker_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ matrix_s3_goofys_docker_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_s3_goofys_docker_image_force_pull }}"

# This will throw a Permission Denied error if already mounted
- name: Check Matrix Goofys external storage mountpoint path
  stat:
    path: "{{ matrix_synapse_media_store_path }}"
  register: local_path_matrix_synapse_media_store_path_stat
  ignore_errors: yes

- name: Ensure Matrix Goofys external storage mountpoint exists
  file:
    path: "{{ matrix_synapse_media_store_path }}"
    state: directory
    mode: 0750
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
  when: "not local_path_matrix_synapse_media_store_path_stat.failed and not local_path_matrix_synapse_media_store_path_stat.stat.exists"

- name: Ensure goofys environment variables file created
  template:
    src: "{{ role_path }}/templates/goofys/env-goofys.j2"
    dest: "{{ matrix_synapse_config_dir_path }}/env-goofys"
    owner: root
    mode: 0600

- name: Ensure matrix-goofys.service installed
  template:
    src: "{{ role_path }}/templates/goofys/systemd/matrix-goofys.service.j2"
    dest: "{{ matrix_systemd_path }}/matrix-goofys.service"
    mode: 0644
  register: matrix_goofys_systemd_service_result

- name: Ensure systemd reloaded after matrix-goofys.service installation
  service:
    daemon_reload: yes
  when: "matrix_goofys_systemd_service_result.changed"
