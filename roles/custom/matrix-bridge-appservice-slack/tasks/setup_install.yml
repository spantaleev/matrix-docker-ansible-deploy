---

- name: Ensure AppService Slack paths exist
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: 0750
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
  with_items:
    - {path: "{{ matrix_appservice_slack_base_path }}", when: true}
    - {path: "{{ matrix_appservice_slack_config_path }}", when: true}
    - {path: "{{ matrix_appservice_slack_data_path }}", when: true}
    - {path: "{{ matrix_appservice_slack_docker_src_files_path }}", when: "{{ matrix_appservice_slack_container_image_self_build }}"}
  when: item.when | bool

- ansible.builtin.set_fact:
    matrix_appservice_slack_requires_restart: false

- when: "matrix_appservice_slack_database_engine == 'postgres'"
  block:
    - name: Check if a nedb database already exists
      ansible.builtin.stat:
        path: "{{ matrix_appservice_slack_data_path }}/teams.db"
      register: matrix_appservice_slack_nedb_database_path_local_stat_result

    - when: "matrix_appservice_slack_nedb_database_path_local_stat_result.stat.exists | bool"
      block:
        - ansible.builtin.import_tasks: "{{ role_path }}/tasks/migrate_nedb_to_postgres.yml"

        - ansible.builtin.set_fact:
            matrix_appservice_slack_requires_restart: true

- name: Ensure Appservice Slack image is pulled
  community.docker.docker_image:
    name: "{{ matrix_appservice_slack_docker_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ matrix_appservice_slack_docker_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_appservice_slack_docker_image_force_pull }}"
  when: "not matrix_appservice_slack_container_image_self_build | bool"
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed

- name: Ensure matrix-appservice-slack repository is present when self-building
  ansible.builtin.git:
    repo: "{{ matrix_appservice_slack_docker_repo }}"
    version: "{{ matrix_appservice_slack_docker_repo_version }}"
    dest: "{{ matrix_appservice_slack_docker_src_files_path }}"
    force: "yes"
  become: true
  become_user: "{{ matrix_user_username }}"
  register: matrix_appservice_slack_git_pull_results
  when: "matrix_appservice_slack_container_image_self_build | bool"

- name: Ensure matrix-appservice-slack Docker image is built
  community.docker.docker_image:
    name: "{{ matrix_appservice_slack_docker_image }}"
    source: build
    force_source: "{{ matrix_appservice_slack_git_pull_results.changed if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_appservice_slack_git_pull_results.changed }}"
    build:
      dockerfile: Dockerfile
      path: "{{ matrix_appservice_slack_docker_src_files_path }}"
      pull: true
  when: "matrix_appservice_slack_container_image_self_build | bool and matrix_appservice_slack_git_pull_results.changed"

- name: Ensure Matrix Appservice Slack config installed
  ansible.builtin.copy:
    content: "{{ matrix_appservice_slack_configuration | to_nice_yaml(indent=2, width=999999) }}"
    dest: "{{ matrix_appservice_slack_config_path }}/config.yaml"
    mode: 0644
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"

- name: Ensure appservice-slack registration.yaml installed
  ansible.builtin.copy:
    content: "{{ matrix_appservice_slack_registration | to_nice_yaml(indent=2, width=999999) }}"
    dest: "{{ matrix_appservice_slack_config_path }}/slack-registration.yaml"
    mode: 0644
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"

- name: Ensure matrix-appservice-slack.service installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/systemd/matrix-appservice-slack.service.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/matrix-appservice-slack.service"
    mode: 0644
  register: matrix_appservice_slack_systemd_service_result

- name: Ensure systemd reloaded after matrix-appservice-slack.service installation
  ansible.builtin.service:
    daemon_reload: true
  when: "matrix_appservice_slack_systemd_service_result.changed"

- name: Ensure matrix-appservice-slack.service restarted, if necessary
  ansible.builtin.service:
    name: "matrix-appservice-slack.service"
    state: restarted
  when: "matrix_appservice_slack_requires_restart | bool"
