---

- ansible.builtin.set_fact:
    matrix_bot_draupnir_requires_restart: false

- name: Ensure matrix-bot-draupnir paths exist
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: 0750
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
  with_items:
    - {path: "{{ matrix_bot_draupnir_base_path }}", when: true}
    - {path: "{{ matrix_bot_draupnir_config_path }}", when: true}
    - {path: "{{ matrix_bot_draupnir_data_path }}", when: true}
    - {path: "{{ matrix_bot_draupnir_docker_src_files_path }}", when: "{{ matrix_bot_draupnir_container_image_self_build }}"}
  when: "item.when | bool"

- name: Ensure matrix-bot-draupnir support files installed
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
    mode: 0644
  with_items:
    - src: "{{ role_path }}/templates/labels.j2"
      dest: "{{ matrix_bot_draupnir_base_path }}/labels"

- name: Ensure Draupnir Docker image is pulled
  community.docker.docker_image:
    name: "{{ matrix_bot_draupnir_docker_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ matrix_bot_draupnir_docker_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_bot_draupnir_docker_image_force_pull }}"
  when: "not matrix_bot_draupnir_container_image_self_build | bool"
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed

- name: Ensure Draupnir repository is present on self-build
  ansible.builtin.git:
    repo: "{{ matrix_bot_draupnir_container_image_self_build_repo }}"
    dest: "{{ matrix_bot_draupnir_docker_src_files_path }}"
    version: "{{ matrix_bot_draupnir_docker_image.split(':')[1] }}"
    force: "yes"
  become: true
  become_user: "{{ matrix_user_username }}"
  register: matrix_bot_draupnir_git_pull_results
  when: "matrix_bot_draupnir_container_image_self_build | bool"

- name: Ensure Draupnir Docker image is built
  community.docker.docker_image:
    name: "{{ matrix_bot_draupnir_docker_image }}"
    source: build
    force_source: "{{ matrix_bot_draupnir_git_pull_results.changed }}"
    build:
      dockerfile: Dockerfile
      path: "{{ matrix_bot_draupnir_docker_src_files_path }}"
      pull: true
  when: "matrix_bot_draupnir_container_image_self_build | bool"

- name: Ensure matrix-bot-draupnir config installed
  ansible.builtin.copy:
    content: "{{ matrix_bot_draupnir_configuration | to_nice_yaml(indent=2, width=999999) }}"
    dest: "{{ matrix_bot_draupnir_config_path }}/production.yaml"
    mode: 0644
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"

- name: Ensure matrix-bot-draupnir container network is created
  community.general.docker_network:
    enable_ipv6: "{{ devture_systemd_docker_base_ipv6_enabled }}"
    name: "{{ matrix_bot_draupnir_container_network }}"
    driver: bridge
    driver_options: "{{ devture_systemd_docker_base_container_networks_driver_options }}"

- name: Ensure matrix-bot-draupnir.service installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/systemd/matrix-bot-draupnir.service.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/matrix-bot-draupnir.service"
    mode: 0644
  register: matrix_bot_draupnir_systemd_service_result

- name: Ensure matrix-bot-draupnir.service restarted, if necessary
  ansible.builtin.service:
    name: "matrix-bot-draupnir.service"
    state: restarted
    daemon_reload: true
  when: "matrix_bot_draupnir_requires_restart | bool"
