#jinja2: lstrip_blocks: "True"
# Homeserver details.
homeserver:
    # The address that this appservice can use to connect to the homeserver.
    address: {{ matrix_mautrix_discord_homeserver_address | to_json }}
    # The domain of the homeserver (for MXIDs, etc).
    domain: {{ matrix_mautrix_discord_homeserver_domain | to_json }}    
    # Is the homeserver actually mautrix-asmux?
    asmux: false
    # The URL to push real-time bridge status to.
    # If set, the bridge will make POST requests to this URL whenever a user's discord connection state changes.
    # The bridge will use the appservice as_token to authorize requests.
    status_endpoint: null
    # Endpoint for reporting per-message status.
    message_send_checkpoint_endpoint: null
    # Does the homeserver support https://github.com/matrix-org/matrix-spec-proposals/pull/2246?
    async_media: false

# Application service host/registration related details.
# Changing these values requires regeneration of the registration.
appservice:
    # The address that the homeserver can use to connect to this appservice.
    address: {{ matrix_mautrix_discord_appservice_address | to_json }}
    
    # The hostname and port where this appservice should listen.
    hostname: 0.0.0.0
    port: 8080
    
    # Database config.
    database:
        # The database type. "sqlite3" and "postgres" are supported.
        type: {{ matrix_mautrix_discord_appservice_database_type|to_json }}
        # The database URI.
        #   SQLite: File name is enough. https://github.com/mattn/go-sqlite3#connection-string
        #   Postgres: Connection string. For example, postgres://user:password@host/database?sslmode=disable
        #             To connect via Unix socket, use something like postgres:///dbname?host=/var/run/postgresql
        uri: {{ matrix_mautrix_discord_appservice_database_uri|to_json }}
        # Maximum number of connections. Mostly relevant for Postgres.
        max_open_conns: 20
        max_idle_conns: 2
        # Maximum connection idle time and lifetime before they're closed. Disabled if null.
        # Parsed with https://pkg.go.dev/time#ParseDuration
        max_conn_idle_time: null
        max_conn_lifetime: null
    
    # The unique ID of this appservice.
    id: discord
    # Appservice bot details.
    bot:
        # Username of the appservice bot.
        username: {{ matrix_mautrix_discord_appservice_bot_username|to_json }}
        # Display name and avatar for bot. Set to "remove" to remove display name/avatar, leave empty
        # to leave display name/avatar as-is.
        displayname: Discord bridge bot
        avatar: mxc://maunium.net/nIdEykemnwdisvHbpxflpDlC
    # Whether or not to receive ephemeral events via appservice transactions.
    # Requires MSC2409 support (i.e. Synapse 1.22+).
    ephemeral_events: true
    
    # Authentication tokens for AS <-> HS communication. Autogenerated; do not modify.
    as_token: {{ matrix_mautrix_discord_appservice_token | to_json }}
    hs_token: {{ matrix_mautrix_discord_homeserver_token | to_json }}

# Bridge config
bridge:
    # Localpart template of MXIDs for Discord users.
    # {{ '{{.}}' }} is replaced with the internal ID of the Discord user.
    username_template: "{{ 'discord_{{.}}' }}"
    # Displayname template for Discord users. This is also used as the room name in DMs if private_chat_portal_meta is enabled.
    # Available variables:
    #  {{ '{{.ID}}' }} - Internal user ID
    #  {{ '{{.Username}}' }} - User's displayname on Discord
    #  {{ '{{.Discriminator}}' }} - The 4 numbers after the name on Discord
    #  {{ '{{.Bot}}' }} - Whether the user is a bot
    #  {{ '{{.System}}' }} - Whether the user is an official system user
    displayname_template: "{{ '{{.Username}} {{if .Bot}} (bot){{end}}' }}"
    # Displayname template for Discord channels (bridged as rooms, or spaces when type=4).
    # Available variables:
    #  {{ '{{.Name}}' }} - Channel name, or user displayname (pre-formatted with displayname_template) in DMs.
    #  {{ '{{.ParentName}}' }} - Parent channel name (used for categories).
    #  {{ '{{.GuildName}}' }} - Guild name.
    #  {{ '{{.NSFW}}' }} - Whether the channel is marked as NSFW.
    #  {{ '{{.Type}}' }} - Channel type (see values at https://github.com/bwmarrin/discordgo/blob/v0.25.0/structs.go#L251-L267)
    channel_name_template: "{{ '{{if or (eq .Type 3) (eq .Type 4)}}{{.Name}}{{else}}#{{.Name}}{{end}}' }}"
    # Displayname template for Discord guilds (bridged as spaces).
    # Available variables:
    #  {{ '{{.Name}}' }} - Guild name
    guild_name_template: "{{ '{{.Name}}' }}"
    # Should the bridge explicitly set the avatar and room name for DM portal rooms?
    # This is implicitly enabled in encrypted rooms.
    private_chat_portal_meta: false
    portal_message_buffer: 128
    # Number of private channel portals to create on bridge startup.
    # Other portals will be created when receiving messages.
    startup_private_channel_create_limit: 5
    # Should the bridge send a read receipt from the bridge bot when a message has been sent to Discord?
    delivery_receipts: false
    # Whether the bridge should send the message status as a custom com.beeper.message_send_status event.
    message_status_events: true
    # Whether the bridge should send error notices via m.notice events when a message fails to bridge.
    message_error_notices: true
    # Should the bridge use space-restricted join rules instead of invite-only for guild rooms?
    # This can avoid unnecessary invite events in guild rooms when members are synced in.
    restricted_rooms: {{ matrix_mautrix_discord_bridge_restricted_rooms|to_json }}
    # Should the bridge update the m.direct account data event when double puppeting is enabled.
    # Note that updating the m.direct event is not atomic (except with mautrix-asmux)
    # and is therefore prone to race conditions.
    sync_direct_chat_list: false
    # Set this to true to tell the bridge to re-send m.bridge events to all rooms on the next run.
    # This field will automatically be changed back to false after it, except if the config file is not writable.
    resend_bridge_info: false
    # Should the bridge attempt to completely delete portal rooms when a channel is deleted on Discord?
    # If true, the bridge will try to kick Matrix users from the room. Otherwise, the bridge only makes ghosts leave.
    delete_portal_on_channel_delete: false
    # Whether or not created rooms should have federation enabled.
    # If false, created portal rooms will never be federated.
    federate_rooms: {{ matrix_mautrix_discord_federate_rooms|to_json }}
    # Servers to always allow double puppeting from
    double_puppet_server_map:
        "{{ matrix_mautrix_discord_homeserver_domain }}": {{ matrix_mautrix_discord_homeserver_address }}
    # Allow using double puppeting from any server with a valid client .well-known file.
    double_puppet_allow_discovery: false
    # Shared secrets for https://github.com/devture/matrix-synapse-shared-secret-auth
    #
    # If set, double puppeting will be enabled automatically for local users
    # instead of users having to find an access token and run `login-matrix`
    # manually.
    login_shared_secret_map: {{ matrix_mautrix_discord_bridge_login_shared_secret_map|to_json }}
    
    # The prefix for commands. Only required in non-management rooms.
    command_prefix: "{{ matrix_mautrix_discord_command_prefix }}"
    
    # Messages sent upon joining a management room.
    # Markdown is supported. The defaults are listed below.
    management_room_text:
        # Sent when joining a room.
        welcome: "Hello, I'm a Discord bridge bot."
        # Sent when joining a management room and the user is already logged in.
        welcome_connected: "Use `help` for help."
        # Sent when joining a management room and the user is not logged in.
        welcome_unconnected: "Use `help` for help or `login` to log in."
        # Optional extra text sent when joining a management room.
        additional_help: ""
    
    # End-to-bridge encryption support options.
    #
    # See https://docs.mau.fi/bridges/general/end-to-bridge-encryption.html for more info.
    encryption:
        # Allow encryption, work in group chat rooms with e2ee enabled
        allow: {{ matrix_mautrix_discord_bridge_encryption_allow|to_json }}
        # Default to encryption, force-enable encryption in all portals the bridge creates
        # This will cause the bridge bot to be in private chats for the encryption to work properly.
        default: {{ matrix_mautrix_discord_bridge_encryption_default|to_json }}
        # Require encryption, drop any unencrypted messages.
        require: false
        # Enable key sharing? If enabled, key requests for rooms where users are in will be fulfilled.
        # You must use a client that supports requesting keys from other users to use this feature.
        allow_key_sharing: {{ matrix_mautrix_discord_bridge_encryption_key_sharing_allow|to_json }}
        # What level of device verification should be required from users?
        #
        # Valid levels:
        #   unverified - Send keys to all device in the room.
        #   cross-signed-untrusted - Require valid cross-signing, but trust all cross-signing keys.
        #   cross-signed-tofu - Require valid cross-signing, trust cross-signing keys on first use (and reject changes).
        #   cross-signed-verified - Require valid cross-signing, plus a valid user signature from the bridge bot.
        #                           Note that creating user signatures from the bridge bot is not currently possible.
        #   verified - Require manual per-device verification
        #              (currently only possible by modifying the `trust` column in the `crypto_device` database table).
        verification_levels:
            # Minimum level for which the bridge should send keys to when bridging messages from WhatsApp to Matrix.
            receive: unverified
            # Minimum level that the bridge should accept for incoming Matrix messages.
            send: unverified
            # Minimum level that the bridge should require for accepting key requests.
            share: cross-signed-tofu
        # Options for Megolm room key rotation. These options allow you to
        # configure the m.room.encryption event content. See:
        # https://spec.matrix.org/v1.3/client-server-api/#mroomencryption for
        # more information about that event.
        rotation:
            # Enable custom Megolm room key rotation settings. Note that these
            # settings will only apply to rooms created after this option is
            # set.
            enable_custom: false
            # The maximum number of milliseconds a session should be used
            # before changing it. The Matrix spec recommends 604800000 (a week)
            # as the default.
            milliseconds: 604800000
            # The maximum number of messages that should be sent with a given a
            # session before changing it. The Matrix spec recommends 100 as the
            # default.
            messages: 100
    
    # Settings for provisioning API
    provisioning:
        # Prefix for the provisioning API paths.
        prefix: /_matrix/provision
        # Shared secret for authentication. If set to "generate", a random secret will be generated,
        # or if set to "disable", the provisioning API will be disabled.
        shared_secret: generate
    
    # Permissions for using the bridge.
    # Permitted values:
    #    relay - Talk through the relaybot (if enabled), no access otherwise
    #     user - Access to use the bridge to chat with a Discord account.
    #    admin - User level and some additional administration tools
    # Permitted keys:
    #        * - All Matrix users
    #   domain - All users on that homeserver
    #     mxid - Specific user
    permissions: {{ matrix_mautrix_discord_bridge_permissions|to_json }}

logging:
    directory: ./logs
    file_name_format: ''
    file_date_format: "2006-01-02"
    file_mode: 384
    timestamp_format: Jan _2, 2006 15:04:05
    print_level: {{ matrix_mautrix_discord_logging_level | to_json }}
    print_json: false
    file_json: false
