---

- ansible.builtin.set_fact:
    matrix_mautrix_meta_instagram_requires_restart: false

- when: "matrix_mautrix_meta_instagram_database_engine == 'postgres'"
  block:
    - name: Check if an SQLite database already exists
      ansible.builtin.stat:
        path: "{{ matrix_mautrix_meta_instagram_sqlite_database_path_local }}"
      register: matrix_mautrix_meta_instagram_sqlite_database_path_local_stat_result

    - when: "matrix_mautrix_meta_instagram_sqlite_database_path_local_stat_result.stat.exists | bool"
      block:
        - ansible.builtin.include_role:
            name: galaxy/com.devture.ansible.role.postgres
            tasks_from: migrate_db_to_postgres
          vars:
            devture_postgres_db_migration_request:
              src: "{{ matrix_mautrix_meta_instagram_sqlite_database_path_local }}"
              dst: "{{ matrix_mautrix_meta_instagram_database_connection_string }}"
              caller: "{{ role_path | basename }}"
              engine_variable_name: 'matrix_mautrix_meta_instagram_database_engine'
              engine_old: 'sqlite'
              systemd_services_to_stop: "{{ [matrix_mautrix_meta_instagram_identifier + '.service'] }}"

        - ansible.builtin.set_fact:
            matrix_mautrix_meta_instagram_requires_restart: true

- name: Ensure mautrix-meta-instagram container image is pulled
  community.docker.docker_image:
    name: "{{ matrix_mautrix_meta_instagram_container_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ matrix_mautrix_meta_instagram_container_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_mautrix_meta_instagram_container_image_force_pull }}"
  when: not matrix_mautrix_meta_instagram_container_image_self_build
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed

- name: Ensure mautrix-meta-instagram paths exist
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: 0750
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
  with_items:
    - {path: "{{ matrix_mautrix_meta_instagram_base_path }}", when: true}
    - {path: "{{ matrix_mautrix_meta_instagram_config_path }}", when: true}
    - {path: "{{ matrix_mautrix_meta_instagram_data_path }}", when: true}
    - {path: "{{ matrix_mautrix_meta_instagram_container_src_files_path }}", when: "{{ matrix_mautrix_meta_instagram_container_image_self_build }}"}
  when: item.when | bool

- when: matrix_mautrix_meta_instagram_container_image_self_build | bool
  block:
    - name: Ensure mautrix-meta-instagram repository is present on self-build
      ansible.builtin.git:
        repo: "{{ matrix_mautrix_meta_instagram_container_image_self_build_repo }}"
        dest: "{{ matrix_mautrix_meta_instagram_container_src_files_path }}"
        version: "{{ matrix_mautrix_meta_instagram_container_image.split(':')[1] }}"
        force: "yes"
      become: true
      become_user: "{{ matrix_user_username }}"
      register: matrix_mautrix_meta_instagram_git_pull_results

    - name: Ensure mautrix-meta-instagram container image is built
      community.docker.docker_image:
        name: "{{ matrix_mautrix_meta_instagram_container_image }}"
        source: build
        force_source: "{{ matrix_mautrix_meta_instagram_git_pull_results.changed if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
        force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_mautrix_meta_instagram_git_pull_results.changed }}"
        build:
          dockerfile: Dockerfile
          path: "{{ matrix_mautrix_meta_instagram_container_src_files_path }}"
          pull: true

- name: Ensure mautrix-meta-instagram config.yaml installed
  ansible.builtin.copy:
    content: "{{ matrix_mautrix_meta_instagram_configuration | to_nice_yaml(indent=2, width=999999) }}"
    dest: "{{ matrix_mautrix_meta_instagram_config_path }}/config.yaml"
    mode: 0644
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"

- name: Ensure mautrix-meta-instagram registration.yaml installed
  ansible.builtin.copy:
    content: "{{ matrix_mautrix_meta_instagram_registration | to_nice_yaml(indent=2, width=999999) }}"
    dest: "{{ matrix_mautrix_meta_instagram_config_path }}/registration.yaml"
    mode: 0644
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"

- name: Ensure mautrix-meta-instagram support files installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/{{ item }}.j2"
    dest: "{{ matrix_mautrix_meta_instagram_base_path }}/{{ item }}"
    mode: 0640
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
  with_items:
    - labels

- name: Ensure mautrix-meta-instagram container network is created
  community.general.docker_network:
    name: "{{ matrix_mautrix_meta_instagram_container_network }}"
    driver: bridge

- name: Ensure mautrix-meta-instagram.service installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/systemd/matrix-mautrix-meta.service.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ matrix_mautrix_meta_instagram_identifier }}.service"
    mode: 0644

- name: Ensure mautrix-meta-instagram.service restarted, if necessary
  ansible.builtin.service:
    name: "{{ matrix_mautrix_meta_instagram_identifier }}.service"
    state: restarted
    daemon_reload: true
  when: "matrix_mautrix_meta_instagram_requires_restart | bool"
