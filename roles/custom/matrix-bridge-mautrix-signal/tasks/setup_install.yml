---

# If the matrix-synapse role is not used, `matrix_synapse_role_executed` won't exist.
# We don't want to fail in such cases.
- name: Fail if matrix-synapse role already executed
  ansible.builtin.fail:
    msg: >-
      The matrix-bridge-mautrix-signal role needs to execute before the matrix-synapse role.
  when: "matrix_synapse_role_executed | default(False)"

- name: Ensure Mautrix Signal image is pulled
  community.docker.docker_image:
    name: "{{ matrix_mautrix_signal_docker_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ matrix_mautrix_signal_docker_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_mautrix_signal_docker_image_force_pull }}"
  when: "not matrix_mautrix_signal_container_image_self_build | bool"
  register: result
  retries: "{{ matrix_container_retries_count }}"
  delay: "{{ matrix_container_retries_delay }}"
  until: result is not failed


- name: Ensure Mautrix Signal repository is present on self-build
  ansible.builtin.git:
    repo: "{{ matrix_mautrix_signal_docker_repo }}"
    version: "{{ matrix_mautrix_signal_docker_repo_version }}"
    dest: "{{ matrix_mautrix_signal_docker_src_files_path }}"
    force: "yes"
  become: true
  become_user: "{{ matrix_user_username }}"
  register: matrix_mautrix_signal_git_pull_results
  when: "matrix_mautrix_signal_container_image_self_build | bool"

- name: Ensure Mautrix Signal image is built
  community.docker.docker_image:
    name: "{{ matrix_mautrix_signal_docker_image }}"
    source: build
    force_source: "{{ matrix_mautrix_signal_git_pull_results.changed if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_mautrix_signal_git_pull_results.changed }}"
    build:
      dockerfile: Dockerfile
      path: "{{ matrix_mautrix_signal_docker_src_files_path }}"
      pull: true
  when: "matrix_mautrix_signal_container_image_self_build | bool"


- name: Ensure Mautrix Signal Daemon image is pulled
  community.docker.docker_image:
    name: "{{ matrix_mautrix_signal_daemon_docker_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ matrix_mautrix_signal_daemon_docker_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_mautrix_signal_daemon_docker_image_force_pull }}"
  when: matrix_mautrix_signal_enabled and not matrix_mautrix_signal_daemon_container_image_self_build | bool
  register: matrix_mautrix_signal_daemon_pull_results

- name: Ensure Mautrix Signal Daemon repository is present on self-build
  ansible.builtin.git:
    repo: "{{ matrix_mautrix_signal_daemon_docker_repo }}"
    version: "{{ matrix_mautrix_signal_daemon_docker_repo_version }}"
    dest: "{{ matrix_mautrix_signal_daemon_docker_src_files_path }}"
    force: "yes"
  become: true
  become_user: "{{ matrix_user_username }}"
  register: matrix_mautrix_signal_daemon_git_pull_results
  when: "matrix_mautrix_signal_daemon_container_image_self_build | bool"

- name: Ensure Mautrix Signal Daemon image is built
  community.docker.docker_image:
    name: "{{ matrix_mautrix_signal_daemon_docker_image }}"
    source: build
    force_source: "{{ matrix_mautrix_signal_daemon_git_pull_results.changed if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_mautrix_signal_daemon_git_pull_results.changed }}"
    build:
      dockerfile: Containerfile
      path: "{{ matrix_mautrix_signal_daemon_docker_src_files_path }}"
      pull: true
  when: "matrix_mautrix_signal_daemon_container_image_self_build | bool"

- name: Ensure Mautrix Signal paths exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0750
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
  with_items:
    - "{{ matrix_mautrix_signal_base_path }}"
    - "{{ matrix_mautrix_signal_config_path }}"
    - "{{ matrix_mautrix_signal_daemon_path }}"
    - "{{ matrix_mautrix_signal_daemon_path }}/avatars"
    - "{{ matrix_mautrix_signal_daemon_path }}/attachments"
    - "{{ matrix_mautrix_signal_daemon_path }}/data"


- name: Ensure mautrix-signal-daemon environment variables file created
  ansible.builtin.template:
    src: "{{ role_path }}/templates/env.j2"
    dest: "{{ matrix_mautrix_signal_daemon_path }}/env"
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
    mode: 0644

- name: Ensure mautrix-signal config.yaml installed
  ansible.builtin.copy:
    content: "{{ matrix_mautrix_signal_configuration | to_nice_yaml(indent=2, width=999999) }}"
    dest: "{{ matrix_mautrix_signal_config_path }}/config.yaml"
    mode: 0644
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"

- name: Ensure mautrix-signal registration.yaml installed
  ansible.builtin.copy:
    content: "{{ matrix_mautrix_signal_registration | to_nice_yaml(indent=2, width=999999) }}"
    dest: "{{ matrix_mautrix_signal_config_path }}/registration.yaml"
    mode: 0644
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"

- name: Ensure matrix-mautrix-signal-daemon.service installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/systemd/matrix-mautrix-signal-daemon.service.j2"
    dest: "{{ matrix_systemd_path }}/matrix-mautrix-signal-daemon.service"
    mode: 0644
  register: matrix_mautrix_signal_daemon_systemd_service_result

- name: Ensure matrix-mautrix-signal.service installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/systemd/matrix-mautrix-signal.service.j2"
    dest: "{{ matrix_systemd_path }}/matrix-mautrix-signal.service"
    mode: 0644
  register: matrix_mautrix_signal_systemd_service_result

- name: Ensure systemd reloaded after matrix-mautrix-signal.service installation
  ansible.builtin.service:
    daemon_reload: true
  when: "matrix_mautrix_signal_systemd_service_result.changed or matrix_mautrix_signal_daemon_systemd_service_result.changed"
