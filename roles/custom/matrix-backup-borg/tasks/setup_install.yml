---

- when: matrix_backup_borg_postgresql_enabled | bool and matrix_backup_borg_version == ''
  block:
  - name: Fail with matrix_backup_borg_version advice if Postgres not enabled
    ansible.builtin.fail:
      msg: >-
        You are not running a built-in Postgres server (`matrix_postgres_enabled: false`), so auto-detecting its version and setting `matrix_backup_borg_version` automatically based on that cannot happen.
        Consider setting `matrix_backup_borg_version` to your Postgres version manually.
    when: not matrix_postgres_enabled

  - ansible.builtin.import_role:
      name: custom/matrix-postgres
      tasks_from: detect_existing_postgres_version

  - name: Fail if detected Postgres version is unsupported
    ansible.builtin.fail:
      msg: "You cannot use borg backup with such an old version ({{ matrix_postgres_detected_version }}) of Postgres. Consider upgrading - link to docs for upgrading Postgres: docs/maintenance-postgres.md#upgrading-postgresql"
    when: "matrix_postgres_detected_version not in matrix_backup_borg_supported_postgres_versions"

  - name: Set the correct borg backup version to use
    ansible.builtin.set_fact:
      matrix_backup_borg_version: "{{ matrix_postgres_detected_version }}"

- name: Ensure borg paths exist
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: 0750
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
  with_items:
    - {path: "{{ matrix_backup_borg_config_path }}", when: true}
    - {path: "{{ matrix_backup_borg_docker_src_files_path }}", when: true}
  when: "item.when | bool"

- name: Ensure borgmatic config is created
  ansible.builtin.copy:
    content: "{{ matrix_backup_borg_configuration | to_nice_yaml(indent=2, width=999999) }}"
    dest: "{{ matrix_backup_borg_config_path }}/config.yaml"
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
    mode: 0640

- name: Ensure borg passwd is created
  ansible.builtin.template:
    src: "{{ role_path }}/templates/passwd.j2"
    dest: "{{ matrix_backup_borg_config_path }}/passwd"
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
    mode: 0640

- name: Ensure borg ssh key is created
  ansible.builtin.template:
    src: "{{ role_path }}/templates/sshkey.j2"
    dest: "{{ matrix_backup_borg_config_path }}/sshkey"
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
    mode: 0600

- name: Ensure borg image is pulled
  community.docker.docker_image:
    name: "{{ matrix_backup_borg_docker_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ matrix_backup_borg_docker_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_backup_borg_docker_image_force_pull }}"
  when: "not matrix_backup_borg_container_image_self_build | bool"
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed

- name: Ensure borg repository is present on self-build
  ansible.builtin.git:
    repo: "{{ matrix_backup_borg_docker_repo }}"
    version: "{{ matrix_backup_borg_docker_repo_version }}"
    dest: "{{ matrix_backup_borg_docker_src_files_path }}"
    force: "yes"
  become: true
  become_user: "{{ matrix_user_username }}"
  register: matrix_backup_borg_git_pull_results
  when: "matrix_backup_borg_container_image_self_build | bool"

- name: Ensure borg image is built
  community.docker.docker_image:
    name: "{{ matrix_backup_borg_docker_image }}"
    source: build
    force_source: "{{ matrix_backup_borg_git_pull_results.changed if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_mailer_git_pull_results.changed }}"
    build:
      dockerfile: Dockerfile
      path: "{{ matrix_backup_borg_docker_src_files_path }}"
      pull: true
  when: "matrix_backup_borg_container_image_self_build | bool"

- name: Ensure matrix-backup-borg.service installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/systemd/matrix-backup-borg.service.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/matrix-backup-borg.service"
    mode: 0644
  register: matrix_backup_borg_systemd_service_result

- name: Ensure matrix-backup-borg.timer installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/systemd/matrix-backup-borg.timer.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/matrix-backup-borg.timer"
    mode: 0644
  register: matrix_backup_borg_systemd_timer_result

- name: Ensure systemd reloaded after matrix-backup-borg.service installation
  ansible.builtin.service:
    daemon_reload: true
  when: "matrix_backup_borg_systemd_service_result.changed | bool"

- name: Ensure matrix-backup-borg.service enabled
  ansible.builtin.service:
    enabled: true
    name: matrix-backup-borg.service

- name: Ensure matrix-backup-borg.timer enabled
  ansible.builtin.service:
    enabled: true
    name: matrix-backup-borg.timer
