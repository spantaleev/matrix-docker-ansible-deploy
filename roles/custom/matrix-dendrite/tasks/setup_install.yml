---
- name: Ensure Dendrite paths exist
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: 0750
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
  with_items:
    - path: "{{ matrix_dendrite_config_dir_path }}"
      when: true
    - path: "{{ matrix_dendrite_bin_path }}"
      when: true
    - path: "{{ matrix_dendrite_ext_path }}"
      when: true
    - path: "{{ matrix_dendrite_nats_storage_path }}"
      when: true
    - path: "{{ matrix_dendrite_docker_src_files_path }}"
      when: "{{ matrix_dendrite_container_image_self_build }}"
  when: "item.when | bool"

# This will throw a Permission Denied error if already mounted using fuse
- name: Check Dendrite media store path
  ansible.builtin.stat:
    path: "{{ matrix_dendrite_media_store_path }}"
  register: local_path_media_store_stat
  ignore_errors: true

# This is separate and conditional, to ensure we don't execute it
# if the path already exists or we failed to check, because it's mounted using fuse.
- name: Ensure Dendrite media store path exists
  ansible.builtin.file:
    path: "{{ matrix_dendrite_media_store_path }}"
    state: directory
    mode: 0750
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
  when: "not local_path_media_store_stat.failed and not local_path_media_store_stat.stat.exists"

- name: Ensure Dendrite Docker image is pulled
  community.docker.docker_image:
    name: "{{ matrix_dendrite_docker_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ matrix_dendrite_docker_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_dendrite_docker_image_force_pull }}"
  when: "not matrix_dendrite_container_image_self_build | bool"
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed

# We do this so that the signing key would get generated.
# We don't use the `docker_container` module, because using it with `cap_drop` requires
# a very recent version, which is not available for a lot of people yet.
- name: Generate Dendrite signing key
  ansible.builtin.command:
    cmd: |
      docker run
      --rm
      --name=matrix-dendrite-config
      --entrypoint=generate-keys
      --mount type=bind,src={{ matrix_dendrite_config_dir_path }},dst=/data
      {{ matrix_dendrite_docker_image }} --private-key=/data/{{ matrix_server_fqn_matrix }}.signing.pem
      generate
    creates: "{{ matrix_dendrite_config_dir_path }}/{{ matrix_server_fqn_matrix }}.signing.pem"

- name: Ensure Dendrite server key exists
  ansible.builtin.file:
    path: "{{ matrix_dendrite_config_dir_path }}/{{ matrix_server_fqn_matrix }}.signing.pem"
    mode: 0644
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"

- name: Ensure Dendrite configuration installed
  ansible.builtin.copy:
    content: "{{ matrix_dendrite_configuration | to_nice_yaml(indent=2, width=999999) }}"
    dest: "{{ matrix_dendrite_config_dir_path }}/dendrite.yaml"
    mode: 0644
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"

- when: "matrix_dendrite_container_image_self_build | bool"
  block:
    - name: Ensure Dendrite repository is present on self-build
      ansible.builtin.git:
        repo: "{{ matrix_dendrite_container_image_self_build_repo }}"
        dest: "{{ matrix_dendrite_docker_src_files_path }}"
        version: "{{ matrix_dendrite_docker_image.split(':')[1] }}"
        force: "yes"
      become: true
      become_user: "{{ matrix_user_username }}"
      register: matrix_dendrite_git_pull_results

    - name: Check if Dendrite Docker image exists
      ansible.builtin.command: "{{ devture_systemd_docker_base_host_command_docker }} images --quiet --filter 'reference={{ matrix_dendrite_docker_image }}'"
      register: matrix_dendrite_docker_image_check_result
      changed_when: false

    # Invoking the `docker build` command here, instead of calling the `docker_image` Ansible module,
    # because the latter does not support BuildKit.
    # See: https://github.com/ansible-collections/community.general/issues/514
    - name: Ensure Dendrite Docker image is built
      ansible.builtin.command:
        cmd: "{{ devture_systemd_docker_base_host_command_docker }} build -t {{ matrix_dendrite_docker_image }} {{ matrix_dendrite_docker_src_files_path }}"
      environment:
        DOCKER_BUILDKIT: 1
      changed_when: true
      when: "matrix_dendrite_git_pull_results.changed | bool or matrix_dendrite_docker_image_check_result.stdout == ''"

- name: Ensure Dendrite container network is created
  community.general.docker_network:
    name: "{{ matrix_dendrite_container_network }}"
    driver: bridge

- name: Ensure matrix-dendrite.service installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/dendrite/systemd/matrix-dendrite.service.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/matrix-dendrite.service"
    mode: 0644

- name: Ensure Dendrite scripts created
  ansible.builtin.template:
    src: "{{ role_path }}/templates/dendrite/bin/{{ item }}.j2"
    dest: "{{ matrix_dendrite_bin_path }}/{{ item }}"
    mode: 0750
  with_items:
    - create-account
