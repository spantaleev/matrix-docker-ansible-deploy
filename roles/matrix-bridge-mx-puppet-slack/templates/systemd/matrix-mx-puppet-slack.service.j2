#jinja2: lstrip_blocks: "True"
[Unit]
Description=Matrix Mx Puppet Slack bridge
{% for service in matrix_mx_puppet_slack_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}
{% for service in matrix_mx_puppet_slack_systemd_wanted_services_list %}
Wants={{ service }}
{% endfor %}

[Service]
Type=simple
ExecStartPre=-{{ matrix_host_command_docker }} kill matrix-mx-puppet-slack
ExecStartPre=-{{ matrix_host_command_docker }} rm matrix-mx-puppet-slack

# Intentional delay, so that the homeserver (we likely depend on) can manage to start.
ExecStartPre={{ matrix_host_command_sleep }} 5

ExecStart={{ matrix_host_command_docker }} run --rm --name matrix-mx-puppet-slack \
			--log-driver=none \
			--user={{ matrix_user_uid }}:{{ matrix_user_gid }} \
			--cap-drop=ALL \
			--network={{ matrix_docker_network }} \
			{% if matrix_mx_puppet_slack_container_http_host_bind_port %}
			-p {{ matrix_mx_puppet_slack_container_http_host_bind_port }}:{{ matrix_mx_puppet_slack_appservice_port }} \
			{% endif %}
			-e CONFIG_PATH=/config/config.yaml \
			-e REGISTRATION_PATH=/config/registration.yaml \
			-v {{ matrix_mx_puppet_slack_config_path }}:/config:z \
			-v {{ matrix_mx_puppet_slack_data_path }}:/data:z \
			{% for arg in matrix_mx_puppet_slack_container_extra_arguments %}
			{{ arg }} \
			{% endfor %}
			{{ matrix_mx_puppet_slack_docker_image }}

ExecStop=-{{ matrix_host_command_docker }} kill matrix-mx-puppet-slack
ExecStop=-{{ matrix_host_command_docker }} rm matrix-mx-puppet-slack
Restart=always
RestartSec=30
SyslogIdentifier=matrix-mx-puppet-slack

[Install]
WantedBy=multi-user.target
