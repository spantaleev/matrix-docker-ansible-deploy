---

# If the matrix-synapse role is not used, `matrix_synapse_role_executed` won't exist.
# We don't want to fail in such cases.
- name: Fail if matrix-synapse role already executed
  fail:
    msg: >-
      The matrix-bridge-mautrix-facebook role needs to execute before the matrix-synapse role.
  when: "matrix_synapse_role_executed|default(False)"

- set_fact:
    matrix_mautrix_facebook_requires_restart: false

- block:
    - name: Check if an SQLite database already exists
      stat:
        path: "{{ matrix_mautrix_facebook_sqlite_database_path_local }}"
      register: matrix_mautrix_facebook_sqlite_database_path_local_stat_result

    - block:
        - set_fact:
            matrix_postgres_db_migration_request:
              src: "{{ matrix_mautrix_facebook_sqlite_database_path_local }}"
              dst: "{{ matrix_mautrix_facebook_database_connection_string }}"
              caller: "{{ role_path|basename }}"
              engine_variable_name: 'matrix_mautrix_facebook_database_engine'
              engine_old: 'sqlite'
              systemd_services_to_stop: ['matrix-mautrix-facebook.service']

        - import_tasks: "{{ role_path }}/../matrix-postgres/tasks/util/migrate_db_to_postgres.yml"

        - set_fact:
            matrix_mautrix_facebook_requires_restart: true
      when: "matrix_mautrix_facebook_sqlite_database_path_local_stat_result.stat.exists|bool"
  when: "matrix_mautrix_facebook_database_engine == 'postgres'"

- name: Ensure Mautrix Facebook image is pulled
  docker_image:
    name: "{{ matrix_mautrix_facebook_docker_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ matrix_mautrix_facebook_docker_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_mautrix_facebook_docker_image_force_pull }}"
  when: not matrix_mautrix_facebook_container_image_self_build

- name: Ensure Mautrix Facebook paths exist
  file:
    path: "{{ item.path }}"
    state: directory
    mode: 0750
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
  with_items:
    - { path: "{{ matrix_mautrix_facebook_base_path }}", when: true }
    - { path: "{{ matrix_mautrix_facebook_config_path }}", when: true }
    - { path: "{{ matrix_mautrix_facebook_data_path }}", when: true }
    - { path: "{{ matrix_mautrix_facebook_docker_src_files_path }}", when: "{{ matrix_mautrix_facebook_container_image_self_build }}" }
  when: item.when|bool

- name: Ensure Mautrix Facebook repository is present on self-build
  git:
    repo: "{{ matrix_mautrix_facebook_container_image_self_build_repo }}"
    dest: "{{ matrix_mautrix_facebook_docker_src_files_path }}"
    version: "{{ matrix_mautrix_facebook_docker_image.split(':')[1] }}"
    force: "yes"
  register: matrix_mautrix_facebook_git_pull_results
  when: "matrix_mautrix_facebook_container_image_self_build|bool"

- name: Ensure Mautrix Facebook Docker image is built
  docker_image:
    name: "{{ matrix_mautrix_facebook_docker_image }}"
    source: build
    force_source: "{{ matrix_mautrix_facebook_git_pull_results.changed if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_mautrix_facebook_git_pull_results.changed }}"
    build:
      dockerfile: Dockerfile
      path: "{{ matrix_mautrix_facebook_docker_src_files_path }}"
      pull: yes
  when: "matrix_mautrix_facebook_container_image_self_build|bool"

- name: Check if an old database file already exists
  stat:
    path: "{{ matrix_mautrix_facebook_base_path }}/mautrix-facebook.db"
  register: matrix_mautrix_facebook_stat_database

- name: (Data relocation) Ensure matrix-mautrix-facebook.service is stopped
  service:
    name: matrix-mautrix-facebook
    state: stopped
    enabled: no
    daemon_reload: yes
  failed_when: false
  when: "matrix_mautrix_facebook_stat_database.stat.exists"

- name: (Data relocation) Move mautrix-facebook database file to ./data directory
  command: "mv {{ matrix_mautrix_facebook_base_path }}/mautrix-facebook.db {{ matrix_mautrix_facebook_data_path }}/mautrix-facebook.db"
  when: "matrix_mautrix_facebook_stat_database.stat.exists"

- name: Ensure mautrix-facebook config.yaml installed
  copy:
    content: "{{ matrix_mautrix_facebook_configuration|to_nice_yaml }}"
    dest: "{{ matrix_mautrix_facebook_config_path }}/config.yaml"
    mode: 0644
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"

- name: Ensure mautrix-facebook registration.yaml installed
  copy:
    content: "{{ matrix_mautrix_facebook_registration|to_nice_yaml }}"
    dest: "{{ matrix_mautrix_facebook_config_path }}/registration.yaml"
    mode: 0644
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"

- name: Ensure matrix-mautrix-facebook.service installed
  template:
    src: "{{ role_path }}/templates/systemd/matrix-mautrix-facebook.service.j2"
    dest: "{{ matrix_systemd_path }}/matrix-mautrix-facebook.service"
    mode: 0644
  register: matrix_mautrix_facebook_systemd_service_result

- name: Ensure systemd reloaded after matrix-mautrix-facebook.service installation
  service:
    daemon_reload: yes
  when: "matrix_mautrix_facebook_systemd_service_result.changed"

- name: Ensure matrix-mautrix-facebook.service restarted, if necessary
  service:
    name: "matrix-mautrix-facebook.service"
    state: restarted
  when: "matrix_mautrix_facebook_requires_restart|bool"
