
- name: Record Backup Server variables locally on AWX
  delegate_to: 127.0.0.1
  lineinfile:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    regexp: "^#? *{{ item.key | regex_escape() }}:"
    line: "{{ item.key }}: {{ item.value }}"
    insertafter: '# AWX Settings Start'
  with_dict:
    'awx_backup_enabled': '{{ awx_backup_enabled }}'
  tags: use-survey

- name: Save new 'Backup Server' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: 'roles/matrix-awx/surveys/backup_server.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/backup_server.json'
  tags: use-survey

- name: Copy new 'Backup Server' survey.json to target machine
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/backup_server.json'
    dest: '/matrix/awx/backup_server.json'
    mode: '0660'
  tags: use-survey

- name: Recreate 'Backup Server' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 0 - Backup Server"
    description: "Performs a backup of the entire service to a remote location."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "backup-server,use-survey"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/backup_server.json') }}"
    become_enabled: yes
    state: present
    verbosity: 1
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: yes
  tags: use-survey

- name: Include vars in matrix_vars.yml
  include_vars:
    file: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
  no_log: True

- name: Copy new 'matrix_vars.yml' to target machine
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    dest: '/matrix/awx/matrix_vars.yml'
    mode: '0660'
  tags: use-survey

- name: Run initial backup of /matrix/ and snapshot the database simultaneously 
  command: "{{ item }}" 
  with_items:
    - borgmatic -c /root/.config/borgmatic/config_1.yaml
    - /bin/sh /usr/local/bin/awx-export-service.sh 1 0
  register: _create_instances
  async: 3600  # Maximum runtime in seconds.
  poll: 0  # Fire and continue (never poll)
  when: awx_backup_enabled|bool

- name: Wait for both of these jobs to finish
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: _jobs
  until: _jobs.finished
  delay: 5  # Check every 5 seconds.
  retries: 720  # Retry for a full hour.
  with_items: "{{ _create_instances.results }}"
  when: awx_backup_enabled|bool

- name: Perform borg backup of postgres dump
  command: borgmatic -c /root/.config/borgmatic/config_2.yaml
  when: awx_backup_enabled|bool

- name: Delete the AWX session token for executing modules
  awx.awx.tower_token:
    description: 'AWX Session Token'
    scope: "write"
    state: absent
    existing_token_id: "{{ awx_session_token.ansible_facts.tower_token.id }}"
    tower_host: "https://{{ awx_host }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"

- name: Set boolean value to exit playbook
  set_fact:
    awx_end_playbook: true

- name: End playbook if this task list is called.
  meta: end_play
  when: awx_end_playbook is defined and awx_end_playbook|bool
