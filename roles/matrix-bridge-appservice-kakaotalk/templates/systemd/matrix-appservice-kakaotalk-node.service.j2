#jinja2: lstrip_blocks: "True"
[Unit]
Description=Node backend for Matrix Appservice KakaoTalk

{% for service in matrix_appservice_kakaotalk_node_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}

{% for service in matrix_appservice_kakaotalk_node_systemd_wanted_services_list %}
Wants={{ service }}
{% endfor %}
DefaultDependencies=no

[Service]
Type=simple
Environment="HOME={{ matrix_systemd_unit_home_path }}"

ExecStartPre=-{{ matrix_host_command_sh }} -c '{{ matrix_host_command_docker }} kill matrix-appservice-kakaotalk-node 2>/dev/null || true'
ExecStartPre=-{{ matrix_host_command_sh }} -c '{{ matrix_host_command_docker }} rm matrix-appservice-kakaotalk-node 2>/dev/null || true'

# Intentional delay, so that the homeserver (we likely depend on) can manage to start.
ExecStartPre={{ matrix_host_command_sleep }} 5

ExecStart={{ matrix_host_command_docker }} run --rm --name matrix-appservice-kakaotalk-node \
			--log-driver=none \
			--network={{ matrix_docker_network }} \
			-v {{ matrix_appservice_kakaotalk_data_path }}:/data:z \
			{{ matrix_appservice_kakaotalk_node_docker_image }}

ExecStop=-{{ matrix_host_command_sh }} -c '{{ matrix_host_command_docker }} kill --signal=TERM matrix-appservice-kakaotalk-node 2>/dev/null || true'
# Intentional delay so that the container has time to stop gracefully and remove the RPC socket.
ExecStop=-{{ matrix_host_command_sleep }} 5
ExecStop=-{{ matrix_host_command_sh }} -c '{{ matrix_host_command_docker }} kill matrix-appservice-kakaotalk-node 2>/dev/null || true'
ExecStop=-{{ matrix_host_command_sh }} -c '{{ matrix_host_command_docker }} rm matrix-appservice-kakaotalk-node 2>/dev/null || true'
ExecStop=-{{ matrix_host_command_sh }} -c 'rm {{ matrix_appservice_kakaotalk_data_path }}/rpc.sock 2>/dev/null || true'

Restart=always
RestartSec=30
SyslogIdentifier=matrix-appservice-kakaotalk-node

[Install]
WantedBy=multi-user.target
